package com.formacionbdi.microservicios.app.respuestas.services;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.formacionbdi.microservicios.app.respuestas.clients.ExamenFeignClient;
import com.formacionbdi.microservicios.app.respuestas.models.entity.Respuesta;
import com.formacionbdi.microservicios.app.respuestas.models.repository.RespuestaRepository;
import com.formacionbdi.microservicios.commnos.examenes.models.entity.Examen;
import com.formacionbdi.microservicios.commnos.examenes.models.entity.Pregunta;

@Service
public class RespuestaServiceImpl implements RespuestaService {

	@Autowired
	private RespuestaRepository repositorio;
	
	@Autowired
	private ExamenFeignClient examenCliente;
	
	
	
	@Override
	@Transactional	// org.springframework.transaction.annotation.Transactional;
	public Iterable<Respuesta> guardarTodo(Iterable<Respuesta> respuestas) {

		return repositorio.saveAll(respuestas);
	}


	@Override
	@Transactional(readOnly = true)
	public Iterable<Respuesta> findRespuestaByAlumnoByExamen(Long alumnoId, Long examenId) {

		//return repositorio.findRespuestaByAlumnoByExamen(alumnoId, examenId);
		Examen examenIns = examenCliente.obtenerExamenPorId(examenId);
		List<Pregunta> preguntasIdsIns = examenIns.getPreguntas();
		List<Long> respuestasIns = preguntasIdsIns
				.stream()
				.map(p -> p.getId()).collecto(Collectos.toList());
		return null;
	}


	@Override
	@Transactional(readOnly = true)
	public Iterable<Long> findExamenesIdsConRespuestasByAlumno(Long alumnoId) {

		//return repositorio.findExamenesIdsConRespuestasByAlumno(alumnoId);
		return null;
	}

}
